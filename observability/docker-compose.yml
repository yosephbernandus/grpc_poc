version: "3.9"
networks:
  grpc_network:
    external: true
    name: grpc_network

services:
  grafana:
    build:
      context: ./grafana  # pointing to prometheus directory
      dockerfile: Dockerfile.grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - grpc_network
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      # - ./grafana:/etc/grafana/provisioning
      # - ./grafana:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana

  loki:
    build:
      context: ./loki
      dockerfile: Dockerfile.loki
    container_name: loki
    restart: unless-stopped
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./loki:/etc/loki
    ports:
      - 3100:3100
    networks:
      - grpc_network

  promtail:
    build:
      context: ./promtail
      dockerfile: Dockerfile.promtail
    container_name: promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/log
    networks:
      - grpc_network

  prometheus:
    build:
      context: ./prometheus  # pointing to prometheus directory
      dockerfile: Dockerfile.prometheus
    container_name: prometheus
    restart: unless-stopped
    # command:
    #   - /bin/sh
    #   - -c
    #   - |
    #     envsubst < /etc/prometheus/prometheus.yml.template > /etc/prometheus/prometheus.yml
    #     prometheus --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --storage.tsdb.retention.time=7d --storage.tsdb.retention.size=1GB
    ports:
      - 9090:9090
    networks:
      - grpc_network
    environment:
      - PROMETHEUS_ADDR=${PROMETHEUS_ADDR}
      - DJANGO_GRPC_ADDR=${DJANGO_GRPC_ADDR}
      - NODE_EXPORTER_ADDR=${NODE_EXPORTER_ADDR}
    volumes:
      - ./prometheus:/etc/prometheus # will create prometheus.yml since we mount volume on here
      - prom_data:/prometheus
    #   - ./prometheus-entrypoint.sh:/prometheus-entrypoint.sh
    # entrypoint: ["/bin/sh", "/prometheus-entrypoint.sh"]

   

volumes:
  grafana_data:
  prom_data:

